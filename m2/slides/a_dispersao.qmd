---
title: "Visualizações"
subtitle: "Gráficos de dispersão"
format: 
  revealjs:
      logo: "img/logo-abj-colorido.png"
      footer: "Introdução à Pesquisa Jurimétrica."
      theme: [default, css/custom-css.scss]
      slide-number: c/t
      show-slide-number: all
      mainfont: Yaldevi
editor: visual
lang: pt
title-slide-attributes: 
  data-background-color: "#233262"
  border-start-end-radius: 50%;
  writing-mode: vertical-rl;
  preview-links: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE, 
  message = FALSE, 
  warning = FALSE, 
  results = "hide"
)

cores_abj <- c("#102C68", "#AFCA0A", "#575756")

```

# Gráficos de dispersão {.slide-title}

## Como construir?

```{r}
#| fig-width: 11.0
#| fig-height: 6.0
abjData::litigiosidade |> 
  dplyr::filter(ano == min(ano)) |>
  dplyr::mutate(
    congestionamento = baixados / (novos + pendentes),
    novos_por_100k = novos/pop * 100000
  ) |>
  ggplot2::ggplot() +
  ggplot2::aes(y = novos_por_100k, x = idhm) +
  ggplot2::geom_point() +
  ggplot2::labs(
    title = "Gráfico de dispersão",
    y = "Casos novos por 100 mil habitantes",
    x = "IDH"
  ) +
  ggplot2::theme_minimal(14)
```

## Como construir? Visão geral

-   Não existe na forma univariada; só existe a partir do bivariado.
-   Nos dois eixos deve haver uma variável numérica.
-   Cada ponto no gráfico representa uma observação. Os eixos são características dessa observação.
-   Mostra a associação entre duas variáveis numéricas.
-   O grau de associação também pode ser medido pela *correlação.* O gráfico de dispersão, no entanto, mostra uma informação mais rica do que a correlação consegue mostrar.

## Interpretações: Associação

```{r}
#| fig-width: 9.0
#| fig-height: 4.0
p_positivo <- abjData::litigiosidade |>
  dplyr::filter(ano == min(ano)) |>
  dplyr::mutate(
    congestionamento = baixados / (novos + pendentes),
    novos_por_100k = novos/pop * 100000
  ) |>
  ggplot2::ggplot() +
  ggplot2::aes(y = novos_por_100k, x = idhm) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth(method=lm, se=FALSE, color = cores_abj[1]) +
  ggplot2::labs(
    title = "Gráfico de dispersão com relação positiva",
    y = "Casos novos por 100 mil habitantes",
    x = "IDH"
  ) +
  ggplot2::theme_minimal(12)

p_negativo <- abjData::litigiosidade |>
  dplyr::filter(ano == min(ano)) |>
  dplyr::mutate(
    congestionamento = baixados / (novos + pendentes),
    novos_por_100k = novos/pop * 100000
  ) |>
  ggplot2::ggplot() +
  ggplot2::aes(y = novos_por_100k, x = t_analf18m) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth(method=lm, se=FALSE, color = cores_abj[1]) +
  ggplot2::labs(
    title = "Gráfico de dispersão com relação negativa",
    y = "Casos novos por 100 mil habitantes",
    x = "Taxa de analfabetismo - 18 anos ou mais"
  ) +
  ggplot2::theme_minimal(12)

patchwork::wrap_plots(p_positivo, p_negativo, ncol = 2)
```

## Interpretações: Legalidade

```{r}
#| fig-width: 11.0
#| fig-height: 6.0

si <- function(x) {
  breaks <- c(0, 10^c(M = 3, MM = 6, B = 9))
  n_suffix <- cut(abs(x), breaks = c(unname(breaks), Inf), 
                  labels = c(names(breaks)), right = FALSE)
  n_suffix[is.na(n_suffix)] <- ""
  suffix <- n_suffix
  scale <- 1/breaks[n_suffix]
  scale[which(scale %in% c(Inf, NA))] <- 1
  scales::number(x, accuracy = 1, 
                 scale = unname(scale), 
                 suffix = suffix)
}

da_rjsp <- obsFase2::da_relatorio |> 
  dplyr::select(
    id_processo = n_processo,
    divida,
    remuneracao_liquida = remuneracao_liquida_arrumado,
    parcelado,
    capital,
    deferido
  ) |> 
  dplyr::filter(deferido == "Sim")

da_rjsp |> 
  dplyr::filter(!is.na(divida), !is.na(remuneracao_liquida)) |> 
  dplyr::filter(
    remuneracao_liquida > 1000
    # remuneracao_liquida < 2e7
  ) |> 
  ggplot2::ggplot(ggplot2::aes(divida, remuneracao_liquida)) +
  ggplot2::geom_point(size = 2, ggplot2::aes(colour = parcelado, shape = capital)) +
  ggplot2::scale_x_log10(breaks = c(10^(1:7), 2e8, 1e9), labels = si) +
  ggplot2::scale_y_log10(breaks = c(10^(1:7)), labels = si) +
  ggplot2::scale_shape_discrete(
    name = "Tipo de vara", 
    labels = c("Comum", "Especializada")
  ) +
  ggplot2::geom_abline(slope = 1, intercept = log10(0.05), colour = "black") +
  ggplot2::geom_hline(yintercept = 1e7, colour = "red", linetype = 2) +
  ggplot2::scale_colour_viridis_d(begin = 0.2, end = 0.8, direction = -1) +
  ggplot2::theme_minimal(14) +
  ggplot2::labs(
    x = "Dívida total",
    y = "Remuneração do AJ",
    colour = "",
    shape = "Tipo de vara"
  ) +
  ggplot2::theme(legend.position = "bottom")
```

## Interpretações: Legalidade

```{r}
viridis <- viridis::viridis(4, begin=.2, end=.8, direction=1)

da_crsfn <- obsCRSFN::da_crsfn_tidy |> 
  dplyr::filter(conhecimento == "Sim") |> 
  dplyr::mutate(
    modificou_cvm = dplyr::case_when(
      recurso_tipo == "Recurso de ofício" & v_resultado %in% c("Parcialmente favorável", "Totalmente favorável") ~ "Não",
      recurso_tipo == "Recurso de ofício" & !(v_resultado %in% c("Parcialmente favorável", "Totalmente favorável")) ~ "Sim",
      recurso_tipo == "Recurso voluntário" & v_resultado %in% c("Parcialmente favorável", "Totalmente favorável") ~ "Sim",
      recurso_tipo == "Recurso voluntário" & !(v_resultado %in% c("Parcialmente favorável", "Totalmente favorável")) ~ "Não"
    )
  ) 


n_multa <- da_crsfn |> 
  dplyr::select(id, modificou_cvm, v_valor_final_multa, v_multa_inicial) |> 
  dplyr::mutate(
    dplyr::across(
      .cols = where(is.numeric),
      .fns = ~ifelse(is.na(.x), 0, .x)
    ),
    multa_teve = dplyr::case_when(
      v_valor_final_multa == 0 & v_multa_inicial == 0 ~ FALSE,
      TRUE ~ TRUE
    )
  ) |>
  dplyr::filter(
    modificou_cvm == "Sim",
    multa_teve
  ) |>
  nrow()

da_crsfn |> 
  dplyr::select(id, modificou_cvm, v_valor_final_multa, v_multa_inicial) |> 
  dplyr::mutate(
    dplyr::across(
      .cols = where(is.numeric),
      .fns = ~ifelse(is.na(.x), 0, .x)
    ),
    multa_teve = dplyr::case_when(
      v_valor_final_multa == 0 & v_multa_inicial == 0 ~ FALSE,
      TRUE ~ TRUE
    ),
    tipo_modificacao = dplyr::case_when(
      v_valor_final_multa == 0 & v_multa_inicial > 0 ~ "Extinção da multa", #"Recurso voluntário totalmente procedente"
      v_valor_final_multa > 0 & v_multa_inicial == 0 ~ "Condenação por multa", # "Recurso de ofício procedente"
      v_valor_final_multa < v_multa_inicial ~ "Redução da multa", # "Recurso voluntário parcialmente procedente"
      v_valor_final_multa == v_multa_inicial ~ "Não houve modificação" # "Recurso voluntário improcedente"
      # Vou adicionar a categoria "Recurso de ofício improcedente" e colorir de vermelho
    )
  ) |> 
  dplyr::filter(
    modificou_cvm == "Sim",
    multa_teve
  ) |> 
  ggplot2::ggplot() +
  ggplot2::aes(x = v_valor_final_multa+1, y = v_multa_inicial+1, color = tipo_modificacao) +
  ggplot2::geom_hline(yintercept = 1, color = viridis[1], linetype = 2) +
  ggplot2::geom_vline(xintercept = 1, color = viridis[2], linetype = 2) +
  ggplot2::geom_abline(slope = 1, intercept = 0, color = viridis[3], linetype = 2) +
  ggplot2::geom_point(size=2.5) +
  ggplot2::scale_x_log10(limits = c(1,10^8), breaks = c(10^(0:8)), labels = c("0", "10", "100", "1M", "10M", "100M", "1MM", "10MM", "100MM")) +
  ggplot2::scale_y_log10(limits = c(1,10^8), breaks = c(10^(0:8)), labels = c("0", "10", "100", "1M", "10M", "100M", "1MM", "10MM", "100MM")) +
  ggplot2::scale_colour_manual(values = viridis) +
  ggplot2::labs(
    x = "Multa no CRSFN",
    y = "Multa na CVM",
    colour = "Tipo"
  ) +
  ggplot2::theme_minimal(14) +
  ggplot2::theme(legend.position = "bottom")
```

#  {background="#fff"}

![](img/logo-abj-colorido.png){width="500"}
